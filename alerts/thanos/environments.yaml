groups:
- name: "Environments"
  rules:

  # The prometheus_ready metric is used as an example metric to make sure Thanos receives correct data.

  - alert: MissingData
    expr: absent(prometheus_ready)
    for: ${alert_timing_fast}
    labels:
      severity: critical
      category: shared-services
    annotations:
      summary: Missing Thanos data
      description: "Thanos seems not to receive any data."
      action: "Make sure the Thanos Query pods in the DevOps cluster can connect to all Store services. Check logs and status page of Thanos Query. Make sure all Thanos sidecars are able to upload data to the storage backend."

  - alert: MissingEnvironmentLabel
    expr: prometheus_ready{environment = ""} + 1
    for: ${alert_timing_fast}
    labels:
      severity: critical
      category: shared-services
    annotations:
      summary: Missing environment label
      description: "Thanos is receiving data without an environment label set. Every Prometheus instance should have an environment label configured in its external_labels."
      action: "Investigate the source of the data with the missing environment label, and fix its configuration to always include this label."

  - alert: EnvironmentPrometheusNotReady
    expr: absent(prometheus_ready{environment = "devops"}) or prometheus_ready{environment = "devops"} != 1
    for: ${alert_timing_medium}
    labels:
      severity: critical
      category: shared-services
    annotations:
      summary: Missing data from DevOps environment
      description: "Thanos fails to receive data from the Prometheus instance in the DevOps cluster, or that Prometheus instance is not ready."
      action: "Check logs and pod status of the Prometheus pods in the devops cluster."
